################################################################################
############    Additional Configurations for postgres server      #############
############    File: /etc/postgresql/16/main/postgresql.conf      #############
################################################################################
##################                                            ##################
#################    Connection settings for primary server    #################
##################                                            ##################
################################################################################
listen_addresses = '*'               # Allow connections from other VMs
max_connections = 500                # Maximum number of connections to the database

# Memory settings
shared_buffers = 4GB                 # 4GB of RAM for shared buffer cache (about 25% of total RAM)
work_mem = 32MB                      # 32MB of RAM for each sort operation, multiple instances per connection
maintenance_work_mem = 2GB           # 2GB of RAM for maintenance tasks like VACUUM and CREATE INDEX
effective_cache_size = 10GB          # 10GB of RAM available for caching by the OS and PostgreSQL

# WAL settings
max_wal_size = 4GB                   # Maximum 4GB of WAL files before a checkpoint is triggered
min_wal_size = 512MB                 # Minimum 512MB of WAL files to keep
checkpoint_timeout = 15min           # Checkpoint every 15 minutes to ensure data durability
checkpoint_completion_target = 0.9   # Spread checkpoint I/O over 90% of the checkpoint interval
wal_buffers = 16MB                   # 16MB of WAL buffers to handle write operations

# Other performance settings
random_page_cost = 1.1               # Cost estimate for non-sequentially fetched pages
seq_page_cost = 1.0                  # Cost estimate for sequentially fetched pages
default_statistics_target = 100      # Target number of statistics samples for table columns

# Enable replication
wal_level = replica
max_wal_senders = 10                 # Maximum number of concurrent WAL sender processes
max_replication_slots = 10           # Maximum number of replication slots

# Autovacuum (ensure efficient cleanup of tables)
autovacuum = on
autovacuum_naptime = 60              # Autovacuum every 60 seconds
autovacuum_vacuum_cost_delay = 20ms  # Delay in vacuum cost to prevent I/O overload
autovacuum_vacuum_scale_factor = 0.02  # Start autovacuum when table size increases by 2%
autovacuum_analyze_scale_factor = 0.01 # Start analyze when 1% of table rows have been updated

################################################################################
################                                                ################
###############     Connection settings for secondary server      ##############
################                                                ################
################################################################################
listen_addresses = '*'               # Allow connections from other VMs
max_connections = 500                # Maximum number of connections to the database

# Memory settings
shared_buffers = 4GB                 # 4GB of RAM for shared buffer cache (about 25% of total RAM)
work_mem = 32MB                      # 32MB of RAM for each sort operation, multiple instances per connection
maintenance_work_mem = 2GB           # 2GB of RAM for maintenance tasks like VACUUM and CREATE INDEX
effective_cache_size = 10GB          # 10GB of RAM available for caching by the OS and PostgreSQL

# WAL settings
max_wal_size = 4GB                   # Match primary to avoid excessive replication lag
min_wal_size = 512MB                 # Minimum 512MB of WAL files to keep
checkpoint_timeout = 15min           # Checkpoint every 15 minutes to ensure data durability
checkpoint_completion_target = 0.9   # Spread checkpoint I/O over 90% of the checkpoint interval
wal_buffers = 16MB                   # 16MB of WAL buffers to handle write operations

# Other performance settings
random_page_cost = 1.1               # Cost estimate for non-sequentially fetched pages
seq_page_cost = 1.0                  # Cost estimate for sequentially fetched pages
default_statistics_target = 100      # Target number of statistics samples for table columns

# Replication settings (ensure sync with primary)
hot_standby = on                     # Allow read-only queries on the replica
wal_level = replica
max_wal_senders = 10                 # Match primary for replication processes
max_replication_slots = 10           # Match primary for replication slots

# Autovacuum (optional, if you have local writes to the replica)
autovacuum = on
autovacuum_naptime = 60              # Autovacuum every 60 seconds
autovacuum_vacuum_cost_delay = 20ms  # Delay in vacuum cost to prevent I/O overload
autovacuum_vacuum_scale_factor = 0.02  # Start autovacuum when table size increases by 2%
autovacuum_analyze_scale_factor = 0.01 # Start analyze when 1% of table rows have been updated

################################################################################
################                                                ################
##############    Additional commands for replication setup       ##############
################                                                ################
################################################################################

# First we have to remove old main file from secondary database
# Then we will create a new mail file using base bakup of primary servers

sudo systemctl stop postgresql
sudo mv /var/lib/postgresql/16/main /var/lib/postgresql/16/main_backup
sudo su postgres -c "pg_basebackup -h primary_server_ip -D /var/lib/postgresql/16/main -U postgres -P -R"


################################################################################
##########    Allow incoming connections strings from other VMs      ###########
##########    Filename: /etc/postgresql/16/main/pg_hba.conf          ###########
################################################################################

### Allow incoming connections strings from other VMs
# IPv4 local connections:
host    all             all             host_ip/32              trust

# Allow replication connections from localhost, by a user with the
# replication privilege.
host    replication     all             host_ip/32              trust
################################################################################