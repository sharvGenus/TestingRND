<!DOCTYPE html>
<html>

<head>
  <title>Genus Receipt</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta charset="UTF-8" />
  <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@600&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-print-css/css/bootstrap-print.min.css" media="print" />
  <style>
    .logo {
      margin-top: 2rem;
      margin-left: 2rem;
    }
  </style>
</head>

<%
    const {
        convertIfDate,
        transaction,
        parseAddressFromObject,
        transactionIsCancelled,
        parentOrganizationFetchers,
        referrerBase,
        defaultLogoBuffer
    } = dataForEJS
  %>

<% var { materialData, fromStore, toStore, fromProject, toProject, projectName  } = transaction; %>

<% materialData = materialData
  ? materialData.map((item, tableItemIndex) => ({
      ...item,
      serialNumber: tableItemIndex + 1,
      amount: parseFloat(item.rate * item.requestedQuantity).toFixed(2)
      }))
  : [];

  const sumOfAmount = materialData?.reduce((accumulator, currentValue) => accumulator + parseFloat(currentValue.amount), 0);
  const fromStoreAddress = parseAddressFromObject(fromStore);
  const fromStoreAddressSplit = parseAddressFromObject(fromStore).split(',');
  const toStoreAddressSplit = parseAddressFromObject(toStore).split(',');
  %>

<body>
  <div class="no-container-margin border">
    <div class="row">
      <div class="col-sm-3">
        <img class="logo" height="42px" src="<%= defaultLogoBuffer %>" alt="Logo" />
      </div>

      <div class="pdf-top-section-heading col-sm-6 d-flex align-items-center justify-content-center h-100">
        <div class="row justify-content-center">
          <div class="col-sm-12 d-flex justify-content-center">
            <h1 class="pdf-h1 text-center">Genus Power Infrastructures Ltd.</h1>
          </div>
          <div class="col-sm-12 d-flex justify-content-center">
            <h2 class="pdf-h2 text-center">PROJECT TO PROJECT TRANSFER REQUEST<%- transactionIsCancelled(transaction) ? '&nbsp;(CANCELLED)' : '' %></h2>
          </div>
        </div>
      </div>

      <div class="col-sm-3 my-auto mt-2">
        <dl class="m-0 align-items-center bordered-definitions-container">
          <div class="custom-border">
            <dt class="fw-bold my-1 pdf-dt" style="padding-left: 8px;">Document No:</dt>
            <dd class="my-1 pdf-dd" style="word-wrap: anywhere; padding-left: 8px;"><%= transaction?.referenceDocumentNumber || 'N/A' %></dd>
          </div>
          <div class="custom-border">
            <dt class="fw-bold my-1 pdf-dt" style="padding-left: 8px;">Document Date:</dt>
            <dd class="my-1 pdf-dd" style="padding-left: 8px;"><%= convertIfDate(transaction.createdAt) || 'N/A' %></dd>
          </div>
        </dl>
      </div>
    </div>


    <div class="col-sm-12 mt-3">
      <table class="table table-condensed table-sm table-bordered">
        <tbody>
          <tr>
            <td><span class="fw-bold">Company Store:</span> <span><%= parentOrganizationFetchers.getImmediateParentOrganization(fromStore)?.name + ', ' %></span> <span><%= parseAddressFromObject(fromStore) %></span></td>
          </tr>
          <tr>
            <td><span class="fw-bold">GSTIN:</span> <%= fromStore?.gstNumber %></td>
          </tr>
        </tbody>
      </table>
    </div>

    <div class="col-sm-12 mt-3">
      <table class="table table-bordered">
        <tbody>
          <tr>
            <td><span class="fw-bold">From Project: </span><%= fromProject?.name %></td>
            <td><span class="fw-bold">To Project: </span><%= toProject?.name %></td>
          </tr>
        </tbody>
      </table>
    </div>

    <div class="col-sm-12 mt-3">
      <table class="table table-bordered table-sm table-condensed table-extra-condensed">
        <thead>
          <tr>
            <th scope="col">Sr. No.</th>
            <th scope="col">Material Description</th>
            <th scope="col">Code</th>
            <th scope="col">HSN Code</th>
            <th scope="col">UOM</th>
            <th scope="col">Requested Qty</th>
            <th scope="col">Remarks</th>
          </tr>
        </thead>
        <tbody>
          <% for (let i = 0; i < materialData.length; i++) { %>
          <% const { serialNumber, material: { name: materialName, code, hsnCode }, uom: { name: uomName }, requestedQuantity, rate, amount } = materialData[i]; %>
          <tr>
            <td><%= serialNumber %></td>
            <td><%= materialName %></td>
            <td><%= code %></td>
            <td><%= hsnCode %></td>
            <td><%= uomName %></td>
            <td><%= requestedQuantity %></td>
            <% if (i === 0) { %>
            <td class="custom-border-bottom" style="vertical-align:middle;" rowspan="<%= materialData.length %>"><%= transaction?.remarks %></td>
            <% } else { %>
            <td class="d-none"></td>
            <% } %>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <div class="row horizontal-bordered-blocks-container mt-4">
      <div class="col-sm-3 no-padding">
        <div class="signature-block">
          <small class="d-flex justify-content-center pdf-small">Security Guard</small>
        </div>
      </div>
      <div class="col-sm-2 no-padding">
        <div class="signature-block">
          <small class="d-flex justify-content-center pdf-small">Site Engg</small>
        </div>
      </div>
      <div class="col-sm-4 no-padding">
        <div class="signature-block">
          <small class="d-flex justify-content-center pdf-small">Store Incharge</small>
        </div>
      </div>
      <div class="col-sm-3 no-padding">
        <div class="signature-block">
          <small class="d-flex justify-content-center pdf-small">Sub. Contractor's Signature With Seal</small>
        </div>
      </div>
    </div>
  </div>
</body>

</html>
